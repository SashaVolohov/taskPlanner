// Code generated by MockGen. DO NOT EDIT.
// Source: task.go
//
// Generated by this command:
//
//	mockgen -source=task.go -destination=./task_mock.go -package=taskplanner
//

// Package taskplanner is a generated GoMock package.
package taskplanner

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockTaskInterface is a mock of TaskInterface interface.
type MockTaskInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTaskInterfaceMockRecorder
	isgomock struct{}
}

// MockTaskInterfaceMockRecorder is the mock recorder for MockTaskInterface.
type MockTaskInterfaceMockRecorder struct {
	mock *MockTaskInterface
}

// NewMockTaskInterface creates a new mock instance.
func NewMockTaskInterface(ctrl *gomock.Controller) *MockTaskInterface {
	mock := &MockTaskInterface{ctrl: ctrl}
	mock.recorder = &MockTaskInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaskInterface) EXPECT() *MockTaskInterfaceMockRecorder {
	return m.recorder
}

// ExecuteTask mocks base method.
func (m *MockTaskInterface) ExecuteTask(errChannel chan<- error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ExecuteTask", errChannel)
}

// ExecuteTask indicates an expected call of ExecuteTask.
func (mr *MockTaskInterfaceMockRecorder) ExecuteTask(errChannel any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExecuteTask", reflect.TypeOf((*MockTaskInterface)(nil).ExecuteTask), errChannel)
}

// GetTaskTimeParameters mocks base method.
func (m *MockTaskInterface) GetTaskTimeParameters(currentParameters TaskTimeParameters) TaskTimeParameters {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTaskTimeParameters", currentParameters)
	ret0, _ := ret[0].(TaskTimeParameters)
	return ret0
}

// GetTaskTimeParameters indicates an expected call of GetTaskTimeParameters.
func (mr *MockTaskInterfaceMockRecorder) GetTaskTimeParameters(currentParameters any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTaskTimeParameters", reflect.TypeOf((*MockTaskInterface)(nil).GetTaskTimeParameters), currentParameters)
}
